--- ./src/options_docsource.rs	1970-01-01 01:00:01.000000000 +0100
+++ ./src/options_docsource.rs	1970-01-01 01:00:01.000000000 +0100
@@ -1,22 +1,10 @@
 use crate::{
-    contains_insensitive_ascii,
-    starts_with_insensitive_ascii,
-    Cache,
-    DocEntry,
-    DocSource,
-    Errors,
+    contains_insensitive_ascii, starts_with_insensitive_ascii, Cache, DocEntry, DocSource, Errors,
     Lowercase,
 };
 use colored::*;
-use serde::{
-    Deserialize,
-    Serialize,
-};
-use std::{
-    collections::HashMap,
-    path::PathBuf,
-    process::Command,
-};
+use serde::{Deserialize, Serialize};
+use std::{collections::HashMap, path::PathBuf, process::Command};
 
 #[derive(Debug, Clone, Serialize, Deserialize, PartialEq, Eq)]
 pub struct OptionDocumentation {
@@ -109,15 +97,17 @@
 impl Cache for OptionsDatabase {}
 
 pub fn get_hm_json_doc_path() -> Result<PathBuf, std::io::Error> {
-    let base_path_output = Command::new("nix-build")
-        .env("NIXPKGS_ALLOW_UNFREE", "1")
-        .env("NIXPKGS_ALLOW_BROKEN", "1")
-        .env("NIXPKGS_ALLOW_INSECURE", "1")
-        .arg("-E")
-        .arg(include_str!("nix/hm-options.nix"))
+    let base_path_output = Command::new("nix")
+        .arg("eval")
+        .arg("--inputs-from")
+        .arg("/home/lorkas/dotfiles")
+        .arg("--raw")
+        .arg("home-manager#docs-json")
         .output()
         .map(|o| String::from_utf8(o.stdout).unwrap())?;
 
+    println!("{}", base_path_output.trim_end_matches('\n'));
+
     Ok(PathBuf::from(base_path_output.trim_end_matches('\n'))
         .join("share/doc/home-manager/options.json"))
 }
